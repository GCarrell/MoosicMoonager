// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicManager;

namespace MusicManager.Migrations
{
    [DbContext(typeof(MusicManagerContext))]
    partial class MusicManagerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("MusicManager.Favourite", b =>
                {
                    b.Property<int>("TabId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("TabId");

                    b.HasIndex("UserId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("MusicManager.Rating", b =>
                {
                    b.Property<int>("Rating1")
                        .HasColumnType("int")
                        .HasColumnName("Rating");

                    b.Property<int>("TabId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasIndex("TabId");

                    b.HasIndex("UserId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("MusicManager.Tab", b =>
                {
                    b.Property<int>("TabId")
                        .HasColumnType("int");

                    b.Property<string>("BandName")
                        .IsRequired()
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("Instrument")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<int>("TabCreator")
                        .HasColumnType("int");

                    b.Property<string>("TabName")
                        .IsRequired()
                        .HasMaxLength(48)
                        .IsUnicode(false)
                        .HasColumnType("varchar(48)");

                    b.Property<string>("TabUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("TabId");

                    b.HasIndex("TabCreator");

                    b.ToTable("Tabs");
                });

            modelBuilder.Entity("MusicManager.User", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(16)
                        .IsUnicode(false)
                        .HasColumnType("varchar(16)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MusicManager.Favourite", b =>
                {
                    b.HasOne("MusicManager.Tab", "Tab")
                        .WithMany()
                        .HasForeignKey("TabId")
                        .HasConstraintName("FK__Favourite__TabId__3A81B327")
                        .IsRequired();

                    b.HasOne("MusicManager.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Favourite__UserI__3B75D760")
                        .IsRequired();

                    b.Navigation("Tab");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MusicManager.Rating", b =>
                {
                    b.HasOne("MusicManager.Tab", "Tab")
                        .WithMany()
                        .HasForeignKey("TabId")
                        .HasConstraintName("FK__Ratings__TabId__3D5E1FD2")
                        .IsRequired();

                    b.HasOne("MusicManager.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Ratings__UserId__3E52440B")
                        .IsRequired();

                    b.Navigation("Tab");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MusicManager.Tab", b =>
                {
                    b.HasOne("MusicManager.User", "TabCreatorNavigation")
                        .WithMany("Tabs")
                        .HasForeignKey("TabCreator")
                        .HasConstraintName("FK__Tabs__TabCreator__38996AB5")
                        .IsRequired();

                    b.Navigation("TabCreatorNavigation");
                });

            modelBuilder.Entity("MusicManager.User", b =>
                {
                    b.Navigation("Tabs");
                });
#pragma warning restore 612, 618
        }
    }
}
